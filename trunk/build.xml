<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="turtlesport" default="jarApp" basedir=".">

	<!-- set global properties for this build -->
	<property name="Name" value="turtlesport" />
	<property name="version" value="1.9" />
	<property name="src" location="${basedir}/src" />
	<property name="test" location="${basedir}/test" />
	<property name="srcccommonUsbCom" location="${basedir}/c/usbcom/srccommon" />
	<property name="srcMailWin" location="${basedir}/c/mailWin/src" />
	<property name="srcLaunchWinApp" location="${basedir}/c/launchWinApp/src" />
	<property name="srcRegistry" location="${basedir}/c/registryWin/src" />
	<property name="dest" location="${basedir}/classes" />
	<property name="lib" location="${basedir}/lib" />
	<property name="ant" location="${basedir}/ant" />
	<property name="exe" location="${basedir}/build" />
	<property name="build.javadocs" location="docs/api" />
	<property name="packages" value="fr.turtlesport.*" />
	<property name="release" location="${basedir}/release" />
	<property name="jarApp" value="${Name}.jar" />
	<property name="dirBundle" location="${exe}/macosx/turtlesportjre" />
	<property name="rootdir" value='/tmp/turtlesport_dist' />
	<property name="rpmbuilddir" value="${rootdir}/RPMBUILD" />
	<property name="rpmdistdir" value="${rpmbuilddir}/BUILDROOT/turtlesport-${version}-1.noarch" />
	<property name="packaging" value="${basedir}/packaging" />

	<!-- os -->
	<condition property="isWindows" value="true">
		<os family="windows" />
	</condition>
	<condition property="isLinux" value="true">
		<and>
			<os family="unix" />
			<not><os family="mac"/></not>
		</and>
	</condition>
	<condition property="isMacosx" value="true">
		<os family="mac" />
	</condition>
	<condition property="os.shortname" value="windows">
		<os family="windows" />
	</condition>
	<condition property="os.shortname" value="linux">
		<and>
			<os family="unix" />
			<not><os family="mac"/></not>
		</and>
	</condition>
	<condition property="os.shortname" value="macosx">
		<os family="mac" />
	</condition>

	<!-- os  properties-->
	<echo>Load build.${os.shortname}.properties </echo>
	<property file="build.${os.shortname}.properties" />

	<target name="init">
		<tstamp />
		<mkdir dir="${dest}" />
		<mkdir dir="${exe}" />
		<mkdir dir="${exe}/win" />
		<mkdir dir="${exe}/win/build" />
		<mkdir dir="${exe}/linux" />
		<mkdir dir="${exe}/macosx" />
		<mkdir dir="${dirBundle}" />
		<mkdir dir="${release}" />
	</target>

	<target name="clean">
		<delete dir="${dest}" />
	</target>

	<!-- classpath -->
	<path id="app.classpath">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="ant.classpath">
		<fileset dir="${ant}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- task jarbundler pour Mac OS X -->
	<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler">
		<classpath>
			<path refid="ant.classpath" />
		</classpath>
	</taskdef>
	<!-- task xjc -->
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
		<classpath>
			<path refid="ant.classpath" />
		</classpath>
	</taskdef>

	<!-- task  Linux desktop entry-->
	<taskdef name="desktopLinuxEntry" classname="com.googlecode.ant_deb_task.DesktopEntry">
		<classpath>
			<path refid="ant.classpath" />
		</classpath>
	</taskdef>
	<!-- Creates an deb package-->
	<taskdef name="deb" classname="com.googlecode.ant_deb_task.Deb">
		<classpath>
			<path refid="ant.classpath" />
		</classpath>
	</taskdef>

	<!--  ================================================================== -->
	<!--   Utilisation                                                       -->
	<!--  ================================================================== -->
	<target name="usage">
		<echo message="${Name} : Build instructions" />
		<echo message="-------------------------------------------------------------" />
		<echo message="available targets are:" />
		<echo message="make --> compilation du projet" />
		<echo message="remake --> Nettoyage et compilation du projet" />
		<echo message="jar -->construction de l'archive Java" />
		<echo message="javadocs --> création de de la documentation des api" />
		<echo message="-------------------------------------------------------------" />
	</target>

	<!--  ================================================================== -->
	<!--   Compilation du projet                                             -->
	<!--  ================================================================== -->
	<target name="make" depends="init">
		<copy todir="${dest}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac compiler="javac1.7" srcdir="${src}" destdir="${dest}" debug="yes" deprecation="on" encoding="UTF8">
			<compilerarg value="-Xlint:unchecked" />
			<classpath>
				<path refid="app.classpath" />
			</classpath>
		</javac>
	</target>

	<!--  ================================================================== -->
	<!--   Nettoyage et compilation du projet                                -->
	<!--  ================================================================== -->
	<target name="remake" depends="clean,make" />

	<!--  ================================================================== -->
	<!--   JNI                                                               -->
	<!--  ================================================================== -->
	<target name="jniUsbcom" depends="make">
		<javah destdir="${srcccommonUsbCom}" force="yes" verbose="true">
			<class name="fr.turtlesport.UsbProtocol" />
			<classpath>
				<pathelement location="${dest}" />
			</classpath>
		</javah>
	</target>
	<target name="jniRegistryWin32" depends="make">
		<javah destdir="${srcRegistry}" force="yes" verbose="true">
			<class name="fr.turtlesport.reg.RegistryWin" />
			<classpath>
				<pathelement location="${dest}" />
			</classpath>
		</javah>
	</target>
	<target name="jniWinMail" depends="make">
		<javah destdir="${srcMailWin}" force="yes" verbose="true">
			<class name="fr.turtlesport.mail.windows.MailClientWinOutlook" />
			<classpath>
				<pathelement location="${dest}" />
			</classpath>
		</javah>
	</target>
	<target name="jniLaunchWinApp" depends="make">
		<javah destdir="${srcLaunchWinApp}" force="yes" verbose="true">
			<class name="fr.turtlesport.util.LaunchWinApp" />
			<classpath>
				<pathelement location="${dest}" />
			</classpath>
		</javah>
	</target>

	<!--  ================================================================== -->
	<!--   Archive jarApp                                                                                                                                               -->
	<!--  ================================================================== -->
	<target name="jarApp" depends="remake">
		<delete file="${exe}/${jarApp}" />
		<jar destfile="${exe}/${jarApp}" basedir="${dest}">
			<manifest>
				<attribute name="Main-Class" value="fr.turtlesport.TurtleSport" />
				<attribute name="Class-Path" value="fit.jar swingx.jar swingx-ws.jar log4j.jar derby.jar jcommon.jar jfreechart.jar" />
				<section name="common">
					<attribute name="Specification-Title" value="${Name}" />
					<attribute name="Specification-Version" value="${version}" />
				</section>
			</manifest>
		</jar>
		<copy file="${exe}/${jarApp}" todir="${exe}/win/build" overwrite="yes" />
		<copy file="${exe}/${jarApp}" todir="${exe}/linux" overwrite="yes" />
		<copy file="${exe}/${jarApp}" todir="${exe}/macosx" overwrite="yes" />
		<delete file="${exe}/${jarApp}" />
	</target>

	<!--  ================================================================== -->
	<!--       xsd                                                           -->
	<!--  ================================================================== -->
	<target name="xjcTcx">
		<xjc schema="${src}/fr/turtlesport/geo/garmin/tcx/TrainingCenterDatabasev2.xsd" destdir="${src}" />
	</target>
	<target name="xjcMap">
		<xjc schema="${src}/fr/turtlesport/map/map11.xsd" package="fr.turtlesport.map" destdir="${src}" binding="${src}/fr/turtlesport/map/bindings.xml" extension="true" />
	</target>

	<!--  ================================================================== -->
	<!--   Bundle jarApp macosx                                              -->
	<!--  ================================================================== -->
	<target name="jarAppBundle">
		<echo>java.home ${macosx.javahome.dir}</echo>
		<echo>java.home ${dirBundle}</echo>

		<!-- task oracle -->
		<taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask">
			<classpath>
				<path refid="ant.classpath" />
			</classpath>
		</taskdef>

		<!-- avec jre -->
		<delete dir="${dirBundle}" />
		<mkdir dir="${dirBundle}" />
		<bundleapp outputdirectory="${dirBundle}"
				   name="TurtleSport"
				   displayname="TurtleSport"
				   identifier="fr.turtlesport.TurtleSport"
				   icon="${exe}/macosx/turtleIcon.icns"
				   shortversion="${version}"
				   copyright="2016 Turtle Sport"
				   applicationCategory="public.app-category.developer-tools"
				   mainclassname="fr/turtlesport/TurtleSport">
			<!-- Classpath -->
			<classpath dir="${exe}/macosx/">
				<include name="turtlesport.jar" />
				<include name="fit.jar" />
				<include name="jcommon.jar" />
				<include name="jfreechart.jar" />
				<include name="swingx.jar" />
				<include name="swingx-ws.jar" />
				<include name="derby.jar" />
				<include name="log4j.jar" />
				<include name="log4J.xml" />
				<include name="libturtleUsbjni.jnilib" />
			</classpath>
			<!-- runtime -->
			<runtime dir="${macosx.javahome.dir}" />

			<!-- Adjust the look and feel and behavior -->
			<option value="-Dapple.laf.useScreenMenuBar=true" />
			<option value="-Dapple.awt.brushMetal=true" />
			<option value="-Dapple.awt.showGrowBox=false" />
			<option value="-Dcom.apple.macos.use-file-dialog-packages=true" />
			<option value="-Dcom.apple.macos.useScreenMenuBar=true" />
			<option value="-Dcom.apple.mrj.application.apple.menu.about.name=${bundle.name}" />
			<option value="-Dcom.apple.smallTabs=true" />
			<option value="-Xmx1024M" />
		</bundleapp>
	</target>

	<!--  ============================================================== -->
	<!--   Creation de de la documentation des API                       -->
	<!--  ============================================================== -->
	<target name="javadocs">
		<mkdir dir="${build.javadocs}" />
		<javadoc packagenames="${packages}" sourcepath="${src}" destdir="${build.javadocs}" author="false" version="true" use="true" protected="yes" windowtitle="GIE SESAM VITALE - SIC v${version} API Spécification">
			<doctitle>
				<![CDATA[Turtle Sport, v ${version}<br>API Sp&eacute;cification]]></doctitle>
			<header>
				<![CDATA[<b>Turtle Sport</b>
			<br>
				<font size=-1>USB v${version}</font>]]></header>
			<classpath>
				<path refid="app.classpath" />
			</classpath>
		</javadoc>
	</target>

	<!--  ============================================================== -->
	<!--   Release                                                       -->
	<!--  ============================================================== -->
	<target name="release" depends="init, releaseLinux, releaseWin, releaseMacosx, releaseSource" />

	<!-- Launch4j -->
	<target name="launch4j" if="isWindows">
		<delete file="${exe}/win/turtlesport.exe" />
		<exec executable="${win.launch4j.exe}" failonerror="yes">
			<arg value="${exe}/win/launch4J/installerLaunch4j.xml" />
		</exec>
	</target>
	<!-- Win : Création du setup avec Inno Setup -->
	<target name="packagingWin" if="isWindows" depends="winJRE32">
		<exec executable="${win.innosetup.exe}">
			<arg value="${exe}\win\InnoSetup\turtleSport.iss" />
		</exec>
	</target>

	<!-- copie jre 32 win -->
	<target name="winJRE32" if="isWindows">
		<echo>Copie de la jre 32bits : ${win.pathJRE32}</echo>
		<mkdir dir="${exe}/win/build/jre" />
		<copy todir="${exe}/win/build/jre">
			<fileset dir="${win.pathJRE32}">
				<include name="*" />
				<include name="bin/**" />
				<include name="lib/**" />

				<exclude name="bin/rmid.exe" />
				<exclude name="bin/rmiregistry.exe" />
				<exclude name="bin/tnameserv.exe" />
				<exclude name="bin/keytool.exe" />
				<exclude name="bin/kinit.exe" />
				<exclude name="bin/klist.exe" />
				<exclude name="bin/ktab.exe" />
				<exclude name="bin/policytool.exe" />
				<exclude name="bin/orbd.exe" />
				<exclude name="bin/servertool.exe" />

				<exclude name="bin/java.exe" />
				<exclude name="bin/javaws.exe" />
				<exclude name="bin/javacpl.exe" />
				<exclude name="bin/jucheck.exe" />
				<exclude name="bin/jusched.exe" />
				<exclude name="bin/wsdetect.dll" />
				<exclude name="bin/npjava*.dll" />
				<exclude name="bin/npjpi*.dll" />
				<exclude name="bin/npoji610.dll" />
				<exclude name="bin/regutils.dll" />
				<exclude name="bin/axbridge.dll" />
				<exclude name="bin/deploy.dll" />
				<exclude name="bin/jpicom.dll" />
				<exclude name="bin/javacpl.cpl" />
				<exclude name="bin/jpiexp.dll" />
				<exclude name="bin/jpinscp.dll" />
				<exclude name="bin/jpioji.dll" />
				<exclude name="bin/jpishare.dll" />
				<exclude name="bin/jfxmedia.dll" />
				<exclude name="bin/jfxwebkit.dll" />
				<exclude name="lib/deploy.jar" />
				<exclude name="lib/plugin.jar" />
				<exclude name="lib/jfxrt.jar" />
				<exclude name="lib/deploy/messages*.properties" />
				<exclude name="lib/deploy/splash.jpg" />
			</fileset>
		</copy>
	</target>

	<target name="releaseMacosx" if="isMacosx">
		<delete file="${release}/${Name}-macosx-${version}.dmg" />
		<copy todir='${dirBundle}'>
			<fileset file='${exe}/macosx/appdmg/appTurtlesport.json' />
			<fileset file='${exe}/macosx/appdmg/background.png' />
		</copy>
		<exec executable="appdmg"
			  dir="${dirBundle}">
			<arg value="appTurtlesport.json" />
			<arg value="${release}/${Name}-macosx-${version}.dmg" />
		</exec>
    </target>

	<!-- Linux -->
	<target name="releaseLinux" if="isLinux" depends="packagingLinuxTar, packagingLinuxDeb, packagingLinuxRmp" />

	<!-- Desktop Linux Turtle -->
	<target name="desktopLinuxTurtle">
		<desktopLinuxEntry toFile="${exe}/linux/turtlesport.desktop" name="Turtle Sport" genericname="Turtle Sport Garmin logbook" icon="/usr/share/turtlesport/turtlesport.xpm" exec="turtlesport" categories="Education;" type="Application" comment="Turtle Sport Garmin logbook" />
	</target>

	<!-- Creates a Ubuntu/Debian package -->
	<target name="packagingLinuxTar" if="isLinux">
		<!-- create tar -->
		<delete file="${release}/${Name}-linux-${version}.tar" />
		<tar destfile="${release}/${Name}-linux-${version}.tar">
			<tarfileset dir="${exe}/linux" username="root" group="root" mode="755">
			</tarfileset>
		</tar>
	</target>

	<!-- Creates a Ubuntu/Debian package -->
	<target name="packagingLinuxDeb" if="isLinux">
		<deb todir="${release}" package="turtlesport" section="utils" depends="sun-java7-jre | openjdk-7-jre | openjdk-8-jre | java-8-oracle | java-8-oracle | oracle-java7-installer | oracle-java8-installer" postinst="${packaging}/linux/debian/postinst">
			<version upstream="${version}" />
			<maintainer name="Denis Apparicio" email="turtlesport@sourceforge.net" />
			<description synopsis="Turtle Sport">Turtle Sport garmin logbook.</description>
			<tarfileset dir="${exe}/linux" prefix="usr/share/turtlesport" username="root" group="root" filemode="755">
				<exclude name="**/turtlesport" />
				<exclude name="**/turtleSport.png" />
				<exclude name="**/turtlesport125.png" />
				<exclude name="**/turtlesport.desktop" />
				<exclude name="**/51-garmin.rules" />
			</tarfileset>
			<tarfileset dir="${exe}/linux" prefix="usr/share/pixmaps" username="root" group="root">
				<include name="**/turtlesport125.png" />
			</tarfileset>
			<tarfileset dir="${exe}/linux" prefix="usr/bin" username="root" group="root" filemode="755">
				<include name="turtlesport" />
			</tarfileset>
			<tarfileset dir="${exe}/linux" prefix="usr/share/applications" username="root" group="root">
				<include name="turtlesport.desktop" />
			</tarfileset>
			<!--
			<tarfileset dir="${exe}/linux" prefix="etc/udev/rules.d" username="root" group="root" filemode="644">
					<include name="51-garmin.rules" />
			</tarfileset>
			-->
		</deb>
	</target>

	<!-- Creates a rpm package -->
	<target name="packagingLinuxRmp" if="isLinux">
		<echo message='Prepare files to build RPM package' />

		<delete dir="${rootdir}" />
		<!-- Create structure-->
		<mkdir dir='${rootdir}' />
		<mkdir dir='${rpmbuilddir}' />
		<mkdir dir='${rpmbuilddir}/tmp' />
		<mkdir dir='${rpmbuilddir}/SRMPS' />
		<mkdir dir='${rpmbuilddir}/RPMS' />
		<mkdir dir='${rpmbuilddir}/SPECS' />
		<mkdir dir='${rpmbuilddir}/BUILD' />
		<mkdir dir='${rpmdistdir}' />
		<mkdir dir='${rpmdistdir}/usr/bin' />
		<mkdir dir='${rpmdistdir}/usr/share/turtlesport/' />
		<mkdir dir='${rpmdistdir}/usr/share/pixmaps' />

		<!-- Copy files -->
		<copy todir='${rpmbuilddir}/SPECS'>
			<fileset file='${packaging}/linux/rpm/turtlesport.spec' />
		</copy>
		<copy todir='${rpmdistdir}/usr/bin'>
			<fileset file='${exe}/linux/turtlesport' />
		</copy>
		<copy todir='${rpmdistdir}/usr/share/turtlesport'>
			<fileset dir="${exe}/linux/">
				<exclude name="**/turtlesport" />
				<exclude name="**/turtleSport.png" />
				<exclude name="**/turtlesport125.png" />
			</fileset>
		</copy>
		<copy todir='${rpmdistdir}/usr/share/applications'>
			<fileset file='${packaging}/linux/turtlesport.desktop' />
		</copy>
		<copy todir='${rpmdistdir}/usr/share/pixmaps'>
			<fileset file='${exe}/linux/turtlesport125.png' />
		</copy>
		<!-- rights-->
		<chmod file="${rpmdistdir}/usr/bin/turtlesport" perm="ugo+rx" />

		<!-- all -->
		<copy file='${packaging}/linux/rpm/.rpmmacros' toFile='${user.home}/.rpmmacros' overwrite='yes' />
		<replace dir='${rpmbuilddir}/SPECS' value='${version}'>
			<include name='turtlesport.spec' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<rpm failOnError='true' specFile='turtlesport.spec' topDir='${rpmbuilddir}' cleanBuildDir='yes' removeSpec='no' command='-bb -vv --target noarch' />
		<copy file="${rpmbuilddir}/RPMS/turtlesport-${version}-1.all.rpm" todir="${release}" overwrite="true" />
	</target>

	<target name="releaseWin" if="isWindows" depends="launch4j,packagingWin">
		<delete file="${release}/${Name}-win-${version}.zip" />
		<zip destfile="${release}/${Name}-win-${version}.zip" basedir="${exe}/win" excludes="InnoSetup/**, launch4J/**" />
		<copy file="${exe}\win\InnoSetup\Output\${Name}-win-${version}.exe" todir="${release}/" overwrite="yes" />
	</target>
	<target name="releaseSource">
		<delete file="${release}/${Name}-source-${version}.zip" />
		<zip destfile="${release}/${Name}-source-${version}.zip" basedir="${src}" />
	</target>

</project>

